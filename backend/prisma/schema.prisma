// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int          @id @default(autoincrement())
  name        String
  email       String       @unique
  city        String
  country     String
  // cityId      Int          
  password    String
  image       String?
  entrepeneur Entrepeneur?
  investor    Investor?
  // Review      Review[]
  Vote        Vote[]
}

// model Country {
//   id    Int    @id @default(autoincrement())
//   name  String
//   citys City[]
// }

// model City {
//   id        Int     @id @default(autoincrement())
//   country   Country @relation(fields: [countryId], references: [id])
//   name  String @default("")
//   countryId Int     @unique
//   users     User[]
// }

model Entrepeneur {
  user             User              @relation(fields: [id], references: [id], onDelete: Cascade)
  id               Int               @id
  mensual_tickets  Int
  Entrepreneurship Entrepreneurship?
}

model Investor {
  user          User @relation(fields: [id], references: [id], onDelete: Cascade)
  id            Int  @id
  mensual_votes Int
}

model Entrepreneurship {
  id            Int         @id @default(autoincrement())
  name          String        
  description   String?
  image         String?      
  creation_date DateTime    @default(now())
  meta          String[]
  entrepeneur   Entrepeneur @relation(fields: [entrepeneurId], references: [id])
  entrepeneurId Int         @unique
  subcategory   Subcategory @relation(fields: [subcategoryId], references: [id])
  subcategoryId Int
  // Review        Review[]
  Vote          Vote[]
}

model Category {
  id          Int           @id @default(autoincrement())
  name        String
  Subcategory Subcategory[]
}

model Subcategory {
  id               Int                @id @default(autoincrement())
  name             String
  category         Category           @relation(fields: [categoryId], references: [id])
  categoryId       Int
  Entrepreneurship Entrepreneurship[]
}

// model Review {
//   user               User             @relation(fields: [userId], references: [id])
//   entrepreneurship   Entrepreneurship @relation(fields: [entrepreneurshipId], references: [id])
//   userId             Int
//   entrepreneurshipId Int
//   text               String
//   created            DateTime         @default(now())

//   @@id([userId, entrepreneurshipId])
// }

model Vote {
  user               User             @relation(fields: [userId], references: [id])
  entrepreneurship   Entrepreneurship @relation(fields: [entrepreneurshipId], references: [id])
  userId             Int
  entrepreneurshipId Int
  value              Boolean
  created            DateTime         @default(now())

  @@id([userId, entrepreneurshipId])
}

generator erd {
  provider = "prisma-erd-generator"
}